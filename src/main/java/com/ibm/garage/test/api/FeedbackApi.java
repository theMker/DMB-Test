/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.ibm.garage.test.api;

import com.ibm.garage.test.model.ErrorResponse;
import com.ibm.garage.test.model.Feedback;
import com.ibm.garage.test.model.FeedbackInput;
import com.ibm.garage.test.model.SuccessfulResponse;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-02-05T18:28:20.131Z[GMT]")

@Validated
@Api(value = "feedback", description = "the feedback API")
public interface FeedbackApi {

    @ApiOperation(value = "Add a new feedback to the store", nickname = "createFeedback", notes = "", response = SuccessfulResponse.class, tags={ "Feedback", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful Response", response = SuccessfulResponse.class),
        @ApiResponse(code = 400, message = "Invalid input", response = ErrorResponse.class) })
    @RequestMapping(value = "/feedback",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<SuccessfulResponse> createFeedback(@ApiParam(value = "Pet object that needs to be added to the store" ,required=true )  @Valid @RequestBody FeedbackInput feedbackInput);

    @ApiOperation(value = "Update an existing pet", nickname = "getFeedback", notes = "", response = Feedback.class, responseContainer = "List", tags={ "Feedback", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful Response", response = Feedback.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "Invalid Response") })
    @RequestMapping(value = "/feedback",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Feedback>> getFeedback();
}
